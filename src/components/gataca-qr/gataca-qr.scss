@import url("https://fonts.googleapis.com/css2?family=Ubuntu:wght@100;300;400;500;600;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;400;500;600;700&display=swap");

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

// Animated Loader variables & functions

$items: 8;
$velocity: 1.2;
$colorStart: #4745B7;
$colorEnd: #CCCBF8;

/* Sizes */
$itemWidthSM: 9.68;
$itemHeightSM: 4;
$radiusSM: 10.5;

/* Trigonometry helpers */
$pi: 3.14159265359;
$_precision: 10;

@function pow($base, $exp) {
  $value: $base;

  @if $exp >1 {
    @for $i from 2 through $exp {
      $value: $value * $base;
    }
  }

  @if $exp < 1 {
    @for $i from 0 through -$exp {
      $value: $value / $base;
    }
  }

  @return $value;
}

@function fact($num) {
  $fact: 1;

  @if $num >0 {
    @for $i from 1 through $num {
      $fact: $fact * $i;
    }
  }

  @return $fact;
}

@function _to_unitless_rad($angle) {
  @if unit($angle)=="deg" {
    $angle: calc($angle / 180deg) * $pi;
  }

  @if unit($angle)=="rad" {
    $angle: calc($angle / 1rad);
  }

  @return $angle;
}

@function sin($angle) {
  $a: _to_unitless_rad($angle);
  $sin: $a;

  @for $n from 1 through $_precision {
    $sin: $sin + calc(pow(-1, $n) / fact(2 * $n + 1)) * pow($a, (2 * $n + 1));
  }

  @return $sin;
}

@function cos($angle) {
  $a: _to_unitless_rad($angle);
  $cos: 1;

  @for $n from 1 through $_precision {
    $cos: $cos + calc(pow(-1, $n) / fact(2*$n)) * pow($a, 2*$n);
  }

  @return $cos;
}

/*
QR COMPONENT  
*/
@import url('https://fonts.googleapis.com/css2?family=Work+Sans:wght@300;400&display=swap');


.img-fluid {
  height: auto;
  max-width: 50%;
}

img {
  margin-left: auto;
  margin-right: auto;
}

.brandSection {
  padding-top: 5px;
  display: flex;
  align-items: center;

  .gatacaImgSmall {
    height: 13px;
    width: 13px;
    margin: 0;
    margin-right: 10px;
  }
}

.popUpContainer {
  .large-modal {
    width: 300px;
    min-height: 350px;
  }

  .modal-window {
    position: relative;
    border-radius: 6px;
    overflow: hidden;
    color: rgba(24, 27, 94, 0.8);
    box-shadow: 0px 3px 10px rgba(48, 48, 48, 0.1);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    display: flex;
    z-index: 1001;
    padding: 1px;
    background-color: white;
    border-radius: 12px;
    //max-height: 480px;
    -webkit-transition: opacity 0.5s, visibility 0s 0.5s;
    transition: opacity 0.5s, visibility 0s 0.5s;
    visibility: hidden;
    opacity: 0;

    &__content {
      width: 100%;
      height: 100%;
      text-align: left;

      .hidenText {
        display: none;
      }
    }

    .modalText {
      font-family: "Ubuntu", "Work Sans", "Helvetica Neue", sans-serif;
      font-size: 20px;
      font-style: normal;
      font-weight: 700;
      line-height: 24px;
      margin-top: 10px;
      letter-spacing: 1px;
    }

    .qrTitleContainer {
      padding: 14px 24px;
      padding-bottom: 0px;
    }

    .qrTitle {
      font-size: 20px;
      font-weight: 600;
      line-height: 23.5px;
    }

    .qrDescription {
      font-family: "Poppins", "Ubuntu", "Work Sans", "Helvetica Neue", sans-serif;
      font-size: 14px;
      font-style: normal;
      font-weight: 400;
      line-height: 16px;
      //font-feature-settings: 'salt' on;
      color: #707074;
    }

    .bold {
      font-weight: 700;
    }

    .qrBrand {
      margin-top: 4px;
      font-size: 14px;
      font-weight: 400;
      line-height: 16.5px;
      display: flex;
      align-items: center;

      img {
        margin-left: 5px;
        height: 12px;
      }
    }

    .qr-section {
      width: 252px;
      height: 252px;
    }
  }

  .noBoxShadow {
    box-shadow: none;
  }

  .is-visible {
    opacity: 1;
    visibility: visible;
  }
}

.is-transparent {
  opacity: 0;
}

// --------------------------------------------------
// Components
// --------------------------------------------------

// Success
.success {
  display: flex;
  height: 300px;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 0px;

  & > img {
    padding-bottom: 12px;
  }

  & > .successMsg {
    line-height: 23.5px;
    color: var(--neutral-1000, #1e1e20);
    text-align: center;
    font-family: "Ubuntu", "Work Sans", "Helvetica Neue", sans-serif;
    font-size: 20px;
    font-style: normal;
    font-weight: 700;
    line-height: 24px;
  }
}

// RetryButton

.reload, .blured {
  height: 252px;
  width: 252px;
  border: 1px dashed #a1a1a1;
  border-radius: 12px;
  position: relative;
  top: 24px;
  margin: 0 24px 24px;
  display: flex;
  overflow: hidden;
  justify-content: center;
  align-items: center;
}

#qrwait {
  display: flex;
  justify-content: center;
}

#qrwait,
#notify {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  border-radius: 20px;
}

#notify {
  z-index: 10;
  position: absolute;
  justify-self: center;
  justify-items: center;
  justify-content: center;
  align-items: center;
  align-content: center;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  padding: 20px;
  background: rgba(255, 255, 255, 0.95);

  & > img {
    padding-bottom: 12px;
  }
}

.alert {
  display: flex;
  flex-direction: row;
  justify-content: start;
  width: 252px;
  position: absolute;
  bottom: 0px;
  border: 1px solid #ee888c;
  background: #ffdedf;
  border-radius: 11px;
  box-sizing: border-box;
  padding: 12px;
  align-items: center;
  gap: 12px;

  & > img {
    margin: 0;
  }

  & > p {
    font-family: "Poppins", "Ubuntu", "Work Sans", "Helvetica Neue", sans-serif;
    font-size: 14px;
    font-style: normal;
    font-weight: 400;
    margin-top: 0;
    line-height: 16px;
    color: #1e1e20;
  }
}

.notify-text {
  font-family: "Poppins", "Ubuntu", "Work Sans", "Helvetica Neue", sans-serif;
  font-size: 14px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px;
  color: #707074;
  text-align: center;
}


// Animated Loader
.containerLoader {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 30px;
  height: 30px;
  margin-bottom: 12px;
}

.loader {
  position: relative;
  margin-left: 0 !important;
  &__item {
    position: absolute;
    width: $itemWidthSM + px;
    height: $itemHeightSM + px;
    background: transparent;
    border-radius: calc($itemHeightSM / 2) + px;
  }
  @for $i from 1 through $items {
    &__item__#{$i} {
      $deg: calc(360deg / $items) * $i;
      $offsetX: (
        cos(calc(360deg / $items) * $i) * $radiusSM) - calc($itemWidthSM / 2
      );
    $offsetY: (
      sin(calc(360deg / $items) * $i) * $radiusSM) - calc($itemHeightSM / 2
    );
      transform: translate($offsetX + px, $offsetY + px) rotate($deg);
      -webkit-animation: translate($offsetX + px, $offsetY + px) rotate($deg);
      -moz-animation: translate($offsetX + px, $offsetY + px) rotate($deg);
      -o-animation: translate($offsetX + px, $offsetY + px) rotate($deg);

      animation: blink #{calc(1 / $velocity)}s linear #{$i * calc(calc(1 / $velocity) / $items)}s infinite;
      -webkit-animation: blink #{calc(1 / $velocity)}s linear #{$i * calc(calc(1 / $velocity) / $items)}s infinite;
      -moz-animation: blink #{calc(1 / $velocity)}s linear #{$i * calc(calc(1 / $velocity) / $items)}s infinite;
      -o-animation: blink #{calc(1 / $velocity)}s linear #{$i * calc(calc(1 / $velocity) / $items)}s infinite;
    }
  }
  &__item__8 {
    max-width: 8.5px;
  }
}

/// Animations Loader
@keyframes blink {
  0% {
    background: $colorStart;
  }
  100% {
    background: $colorEnd;
  }
}
@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    background: rotate(360deg);
  }
}